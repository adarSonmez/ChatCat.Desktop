<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attcp="clr-namespace:ChatCat.Desktop.AttachedProperties"
                    xmlns:vconv="clr-namespace:ChatCat.Desktop.Converters.ValueConverters">

    <!-- Base styles -->
    <Style x:Key="BaseControlStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="0 0 0 2" />
        <Setter Property="BorderBrush" Value="{StaticResource DisabledColorBrush}" />

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox style -->
    <Style x:Key="BaseTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{StaticResource BackgroundColorBrush}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" />
                            <TextBlock
                                Text="{TemplateBinding Tag}"
                                Foreground="{StaticResource DarkGrayColorBrush}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                IsHitTestVisible="False"
                                Visibility="{Binding Text.IsEmpty, RelativeSource={RelativeSource TemplatedParent}, Converter={vconv:BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PasswordBox style -->
    <Style x:Key="BasePasswordBoxStyle" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="attcp:PasswordBoxAttachedProperty.MonitorPassword" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Background="{StaticResource BackgroundColorBrush}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" />
                            <TextBlock Text="{TemplateBinding Tag}"
                                       Foreground="{StaticResource DarkGrayColorBrush}"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       IsHitTestVisible="False">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <!-- DataTrigger was used intentionally instead of BooleanToVisibilityConverter, just to have an example of that as well. -->
                                            <DataTrigger Binding="{Binding Path=(attcp:PasswordBoxAttachedProperty.HasText), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>