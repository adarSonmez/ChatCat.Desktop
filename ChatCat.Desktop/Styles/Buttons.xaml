<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:enums="clr-namespace:ChatCat.Core.Constants.Enums;assembly=ChatCat.Core"
        xmlns:attcp="clr-namespace:ChatCat.Desktop.AttachedProperties"
        xmlns:vconv="clr-namespace:ChatCat.Desktop.Converters.ValueConverters">

    <!-- Base Button Style -->
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="attcp:ButtonAttachedProperties.IsBusy" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledColorBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DarkGrayColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Hoverless Button Style -->
    <Style x:Key="HoverlessButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- System Icon Button Style -->
    <Style x:Key="SystemIconButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource HoverlessButtonStyle}">
        <!-- Allows interaction with the button in the window chrome -->
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>

    <!-- Icon Button Style -->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource HoverlessButtonStyle}">
        <Setter Property="Padding" Value="10" />
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid }" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>