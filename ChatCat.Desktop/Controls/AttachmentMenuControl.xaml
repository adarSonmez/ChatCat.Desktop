<base:BaseControl x:Class="ChatCat.Desktop.Controls.AttachmentMenuControl"
                  x:TypeArguments="vm:AttachmentMenuVM"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:vm="clr-namespace:ChatCat.Core.ViewModels.Concrete;assembly=ChatCat.Core"
                  xmlns:vconv="clr-namespace:ChatCat.Desktop.Converters.ValueConverters"
                  xmlns:enums="clr-namespace:ChatCat.Core.Constants.Enums;assembly=ChatCat.Core"
                  xmlns:locator="clr-namespace:ChatCat.Desktop.Utils.Locators"
                  xmlns:local="clr-namespace:ChatCat.Desktop.Controls"
                  xmlns:base="clr-namespace:ChatCat.Desktop.Controls.Base"
                  d:DataContext="{d:DesignInstance Type=vm:AttachmentMenuVM, IsDesignTimeCreatable=True}"
                  mc:Ignorable="d">

    <Border
        Padding="10"
        CornerRadius="10"
        Background="#f5f5f5"
        Width="200" Height="200"
        Visibility="{Binding IsMenuVisible, Source={x:Static locator:WpfLocator.AttachmentMenuVM}, Converter={vconv:BooleanToVisibilityConverter}}"
        Margin="10">
        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" BlurRadius="2" Color="Black" Opacity=".5" />
        </Border.Effect>
        <ItemsControl ItemsSource="{Binding Items}">
            <ItemsControl.Resources>
                <Style x:Key="ConditionalIconButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButtonStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ItemType}" Value="{x:Static enums:MenuItemType.Header}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <!-- Remove hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Resources>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <!--Source is parent DataContext-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Icon Button -->
                        <Button Grid.Column="0"
                                FontSize="12"
                                Foreground="Gray"
                                Style="{StaticResource ConditionalIconButtonStyle}"
                                Content="{Binding Icon}" />

                        <!-- TextBlock for Text -->
                        <TextBlock Grid.Column="1"
                                   Text="{Binding Text}"
                                   Foreground="#222"
                                   VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <Setter Property="Grid.ColumnSpan" Value="1" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ItemType}" Value="{x:Static enums:MenuItemType.Header}">
                                            <Setter Property="FontWeight" Value="{x:Static FontWeights.DemiBold}" />
                                            <Setter Property="Grid.ColumnSpan" Value="2" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <!-- Divider -->
                        <Border Grid.ColumnSpan="20" Height="1" Background="Silver" Margin="0,5">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ItemType}" Value="{x:Static enums:MenuItemType.Divider}">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Border>
</base:BaseControl>